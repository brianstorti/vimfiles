snippet class
	class ${1:`Snippet_RubyClassNameFromFilename()`}${2}
		${0}
	end
snippet if
	if ${1}
		${0}
	end
snippet deb
	debugger;${1}
snippet defi
	def initialize${1}
		${0}
	end
snippet defp
	def ${1:name}${2}
		${0}
	end
	${4:private} :$1
snippet pdef
	private def ${1:name}${2}
		${0}
	end
snippet def
	def ${1:name}
		${0}
	end
snippet do
	do
		${0}
	end
snippet dop
	do |${1:param}|
		${0}
	end
snippet enc
	# encoding: UTF-8
snippet module
	module ${1:`Snippet_RubyClassNameFromFilename()`}
		${0}
	end
snippet req
	require '${0}'
snippet reqr
	require_relative '${0}'
snippet ae
	assert_equal ${1:expected}, ${0:actual}
snippet bye
	require 'byebug'; byebug
snippet minitest
	require 'minitest/autorun'

	class ${1:`Snippet_RubyClassNameFromFilename()`} < Minitest::Test
		${0}
	end
snippet test
	test "${1}" do
		${0}
	end
snippet group
	group :${1:development} do
		${0}
	end
